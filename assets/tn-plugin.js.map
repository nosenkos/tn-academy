{"version":3,"sources":["tn-plugin.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","tinymce","create","init","ed","url","addButton","title","name_btn_plugin","cmd","image","addCommand","$","ajax","ajaxurl","type","dataType","data","action","success","resp","response","JSON","parse","activeEditor","windowManager","open","popup_data","text_add_tn_academy_course","width","height","id","body","name","label","course_name","text","link_text","link","values","layout","html","msg_new_course_how_to","onsubmit","linkText","forEach","element","value","course","content","execCommand","msg_no_courses","error","xhr","ajaxOptions","thrownError","console","log","createControl","cm","getInfo","longname","author","authorurl","infourl","version","PluginManager","add","plugins","tn"],"mappings":"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","file":"tn-plugin.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\n(function () {\n    tinymce.create('tinymce.plugins.tn', {\n        /**\n         * Initializes the plugin, this will be executed after the plugin has been created.\n         * This call is done before the editor instance has finished it's initialization so use the onInit event\n         * of the editor instance to intercept that event.\n         *\n         * @param {tinymce.Editor} ed Editor instance that the plugin is initialized in.\n         * @param {string} url Absolute URL to where the plugin is located.\n         */\n        init: function init(ed, url) {\n            ed.addButton('eventsbutton', {\n                title: name_btn_plugin,\n                cmd: 'eventsbutton',\n                image: url + '/tiny_mce_images/calendar-blue.png'\n            });\n\n            ed.addCommand('eventsbutton', function () {\n                $.ajax({\n                    url: ajaxurl,\n                    type: 'POST',\n                    dataType: 'JSON',\n                    data: {\n                        action: 'call_get_courses'\n                    },\n                    success: function success(resp) {\n                        var response = JSON.parse(resp.data);\n                        if (resp.success) {\n\n                            tinymce.activeEditor.windowManager.open({\n                                title: response.popup_data.text_add_tn_academy_course,\n                                width: 440,\n                                height: 220,\n                                id: 'tn-academy-popup-window',\n                                body: [{\n                                    type: 'textbox',\n                                    name: 'title',\n                                    label: response.popup_data.course_name + ':'\n                                }, {\n                                    type: 'textbox',\n                                    name: 'text',\n                                    label: response.popup_data.text + ':'\n                                }, {\n                                    type: 'textbox',\n                                    name: 'linkText',\n                                    label: response.popup_data.link_text + ':'\n                                }, {\n                                    type: 'listbox',\n                                    name: 'course',\n                                    label: response.popup_data.link + ':',\n                                    values: response.data\n                                }, {\n                                    type: 'container',\n                                    name: 'container',\n                                    label: '',\n                                    layout: 'grid',\n                                    html: response.popup_data.msg_new_course_how_to\n                                }],\n                                onsubmit: function onsubmit(e) {\n                                    var title;\n                                    var text;\n                                    var linkText;\n                                    var link;\n                                    var html;\n                                    response.data.forEach(function (element) {\n                                        if (element.value === e.data.course) {\n                                            title = e.data.title !== \"\" ? e.data.title : element.text;\n                                            text = e.data.text !== \"\" ? e.data.text : element.content;\n                                            linkText = e.data.linkText !== \"\" ? e.data.linkText : element.link;\n                                            link = element.link;\n                                        }\n                                    });\n                                    html = '<div class=\"events-button\"><h3 class=\"events-button-title\">' + title + '</h3>' + '<p class=\"events-button-text\">' + text + '</p>' + '<div class=\"events-button-link\"><a href=\"' + link + '\">' + linkText + '</a></div></div>';\n                                    ed.execCommand('mceInsertContent', 0, html);\n                                }\n                            });\n                        } else {\n                            // No courses found\n                            tinymce.activeEditor.windowManager.open({\n                                title: response.popup_data.text_add_tn_academy_course,\n                                width: 440,\n                                height: 220,\n                                id: 'tn-academy-popup-window',\n                                body: [{\n                                    type: 'container',\n                                    name: 'container',\n                                    id: 'tn-academy-no-forms-notice',\n                                    label: '',\n                                    layout: 'grid',\n                                    html: response.popup_data.msg_no_courses\n                                }]\n                            });\n                        }\n                    },\n                    error: function error(xhr, ajaxOptions, thrownError) {\n                        console.log('There was an error during the AJAX call to WordPress Ajax: ' + xhr);\n                    }\n                });\n            });\n        },\n\n        /**\n         * Creates control instances based in the incomming name. This method is normally not\n         * needed since the addButton method of the tinymce.Editor class is a more easy way of adding buttons\n         * but you sometimes need to create more complex controls like listboxes, split buttons etc then this\n         * method can be used to create those.\n         *\n         * @param {String} n Name of the control to create.\n         * @param {tinymce.ControlManager} cm Control manager to use inorder to create new control.\n         * @return {tinymce.ui.Control} New control instance or null if no control was created.\n         */\n        createControl: function createControl(n, cm) {\n            return null;\n        },\n\n        /**\n         * Returns information about the plugin as a name/value array.\n         * The current keys are longname, author, authorurl, infourl and version.\n         *\n         * @return {Object} Name/value array containing information about the plugin.\n         */\n        getInfo: function getInfo() {\n            return {\n                longname: 'TN Buttons',\n                author: 'Sergey Nosenko',\n                authorurl: '',\n                infourl: '',\n                version: \"0.1\"\n            };\n        }\n    });\n\n    // Register plugin\n    tinymce.PluginManager.add('tn', tinymce.plugins.tn);\n})();\n\n},{}]},{},[1]);\n"]}